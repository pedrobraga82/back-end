{"ast":null,"code":"import _defineProperty from\"/home/pedrobraga/eclipse-workspace2020/nfview/backnfe/nfefront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{BrowserRouter as Router,Switch,Route,Redirect}from'react-router-dom';import LoginComponent from'./Components/Login/LoginComponent';import FormNFE from'./Components/NFE/FormNFE';import User from'./Components/User/User';import UserList from'./Components/User/UserList';import UserEdit from'./Components/User/UserEdit';import NFEList from'./Components/NFE/NFEList';import MenuAdmin from'./Menu/MenuAdmin';import NFEListAdmin from'./Components/NFE/NFEListAdmin';import MenuUser from'./Menu/MenuUser';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var user=localStorage.getItem(\"username\");var token=localStorage.getItem(\"token\");var role=localStorage.getItem(\"role\");var AppRouter=function AppRouter(){var _jsx2,_jsx3;return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",exact:true,component:LoginComponent}),/*#__PURE__*/_jsx(Route,{path:\"/nfeview\",exact:true,component:FormNFE}),/*#__PURE__*/_jsx(Route,{path:\"/listusers\",exact:true,component:UserList}),/*#__PURE__*/_jsx(Route,{path:\"/edituser/:id\",exact:true,component:UserEdit}),/*#__PURE__*/_jsx(Route,{path:\"/cadusers\",exact:true,component:User}),/*#__PURE__*/_jsx(Route,{path:\"/nfelist\",exact:true,component:NFEList}),/*#__PURE__*/_jsx(Route,{path:\"/menuuser\",exact:true,component:MenuUser}),/*#__PURE__*/_jsx(Route,(_jsx2={exact:true,path:\"/menuadmin\"},_defineProperty(_jsx2,\"exact\",true),_defineProperty(_jsx2,\"component\",MenuAdmin),_jsx2)),/*#__PURE__*/_jsx(Route,(_jsx3={exact:true,path:\"/nfelistadmin\"},_defineProperty(_jsx3,\"exact\",true),_defineProperty(_jsx3,\"component\",NFEListAdmin),_jsx3)),/*#__PURE__*/_jsx(Route,{path:\"/listusers\",exact:true,component:UserList})]})});};export default AppRouter;","map":{"version":3,"sources":["/home/pedrobraga/eclipse-workspace2020/nfview/backnfe/nfefront/src/AppRouter.js"],"names":["BrowserRouter","Router","Switch","Route","Redirect","LoginComponent","FormNFE","User","UserList","UserEdit","NFEList","MenuAdmin","NFEListAdmin","MenuUser","user","localStorage","getItem","token","role","AppRouter"],"mappings":"uLAAA,OAAUA,aAAa,GAAIC,CAAAA,MAA3B,CAAkCC,MAAlC,CAA0CC,KAA1C,CAAiDC,QAAjD,KAAiE,kBAAjE,CACA,MAAOC,CAAAA,cAAP,KAA2B,mCAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,C,wFAGA,GAAMC,CAAAA,IAAI,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAb,CACA,GAAMC,CAAAA,KAAK,CAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,GAAME,CAAAA,IAAI,CAAGH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb,CAGA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,iBACpB,mBACQ,KAAC,MAAD,wBACQ,MAAC,MAAD,yBAEI,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,KAA1B,CAA4B,SAAS,CAAEd,cAAvC,EAFJ,cAGI,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,KAAK,KAA5B,CAA6B,SAAS,CAAEC,OAAxC,EAHJ,cAKI,KAAC,KAAD,EAAO,IAAI,CAAC,YAAZ,CAAyB,KAAK,KAA9B,CAA+B,SAAS,CAAEE,QAA1C,EALJ,cAMI,KAAC,KAAD,EAAO,IAAI,CAAC,eAAZ,CAA4B,KAAK,KAAjC,CAAkC,SAAS,CAAEC,QAA7C,EANJ,cAOI,KAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,KAAK,KAA7B,CAA8B,SAAS,CAAEF,IAAzC,EAPJ,cAQI,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,KAAK,KAA5B,CAA6B,SAAS,CAAEG,OAAxC,EARJ,cASI,KAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,KAAK,KAA7B,CAA8B,SAAS,CAAEG,QAAzC,EATJ,cAUI,KAAC,KAAD,SAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,YAAlB,wEAAgDF,SAAhD,SAVJ,cAWI,KAAC,KAAD,SAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,eAAlB,wEAAmDC,YAAnD,SAXJ,cAYI,KAAC,KAAD,EAAO,IAAI,CAAC,YAAZ,CAAyB,KAAK,KAA9B,CAA+B,SAAS,CAAEJ,QAA1C,EAZJ,GADR,EADR,CAuGH,CAxGD,CA0GA,cAAeW,CAAAA,SAAf","sourcesContent":["import {  BrowserRouter as Router,Switch, Route, Redirect } from 'react-router-dom';\nimport LoginComponent from './Components/Login/LoginComponent';\nimport FormNFE from './Components/NFE/FormNFE';\nimport User from './Components/User/User';\nimport UserList from './Components/User/UserList';\nimport UserEdit from './Components/User/UserEdit';\nimport NFEList from './Components/NFE/NFEList';\nimport MenuAdmin from './Menu/MenuAdmin';\nimport NFEListAdmin from './Components/NFE/NFEListAdmin';\nimport MenuUser from './Menu/MenuUser';\n\n\nconst user = localStorage.getItem(\"username\")\nconst token = localStorage.getItem(\"token\")\nconst role = localStorage.getItem(\"role\")\n\n\nconst AppRouter = () => {\n    return(\n            <Router>\n                    <Switch>\n                        \n                        <Route path=\"/login\" exact  component={LoginComponent} />\n                        <Route path=\"/nfeview\" exact component={FormNFE} />\n\n                        <Route path=\"/listusers\" exact component={UserList} />\n                        <Route path=\"/edituser/:id\" exact component={UserEdit}/>\n                        <Route path=\"/cadusers\" exact component={User} />\n                        <Route path=\"/nfelist\" exact component={NFEList} />\n                        <Route path=\"/menuuser\" exact component={MenuUser} />\n                        <Route exact path=\"/menuadmin\" exact component={MenuAdmin} />  \n                        <Route exact path=\"/nfelistadmin\" exact component={NFEListAdmin} />\n                        <Route path=\"/listusers\" exact component={UserList} />\n                                \n                                \n\n                    {/*     <Route exact path=\"/menuuser\" exact componnet={MenuUser}>\n                        { user && token  == \"USER\" && role ? <Redirect to=\"/menuuser\" />\n                                :    <LoginComponent />\n                                \n                        }  \n                         </Route>        */} \n\n        \n\n\n{/* \n\n                        </Route>\n                        <Route path=\"/nfeview\" exact component={FormNFE}>\n\n                        { user && token == \"USER\" && role ? <Redirect to=\"/nfeview\" />\n                                :    <LoginComponent />\n                                \n                        }  \n                        </Route>\n                     \n                        <Route path=\"/cadusers\" exact component={User}>\n                            { user && token == \"ADMIN\" && role ? <Redirect to=\"/cadusers\" />\n                                    :    <LoginComponent />\n                                    \n                            }  \n\n                        </Route>\n                        <Route path=\"/listusers\" exact component={UserList}>\n\n                        { user && token  == \"ADMIN\" && role ? <Redirect to=\"/listusers\" />\n                                :    <LoginComponent />\n                                \n                        }  \n\n\n                        </Route>\n\n                        <Route path=\"/edituser/:id\" exact component={UserEdit}>\n                        { user && token == \"ADMIN\" && role ? <Redirect to=\"/edituser/:id\" />\n                                :    <LoginComponent />\n                                \n                        }  \n\n                        </Route>\n                        <Route path=\"/nfelist\" exact component={NFEList}>\n\n                        { user && token == \"USER\" && role ? <Redirect to=\"/nfelist\" />\n                                :    <LoginComponent />\n                                \n                        }   \n\n                        <Route exact path=\"/menuadmin\" >  \n   \n                            { role == \"ADMIN\" ? <MenuAdmin />\n                                    :   <MenuUser />\n                                    \n                            }   \n\n                        </Route>\n\n\n   \n                        <Route exact path=\"/nfelistadmin\" >  \n   \n                            { role == \"ADMIN\" ? <NFEListAdmin />\n                                    :   <MenuUser />\n                                    \n                            }   \n\n                        </Route>\n                        \n                          <Route path=\"/nfelistadmin\" exact component={NFEListAdmin}>\n\n                          { user && role == \"ADMIN\" ? <Redirect to=\"/nfelistadmin\" />\n                                :    <LoginComponent />\n                                \n                          }  \n                        \n                        </Route>  */}\n        \n                        \n                    </Switch>\n            </Router>\n    )\n}\n\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}