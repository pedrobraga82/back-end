{"ast":null,"code":"import axios from\"axios\";import base64 from\"base-64\";import utf8 from\"utf8\";export function isAuthenticated(){return function(dispatch){var url='http://localhost:8082/api/user';var config={headers:{'Authorization':'Bearer '+localStorage.getItem(\"token\")}};axios.get(url,config).then(function(response){dispatch({type:\"IS_AUTHENTICATED\",payload:response.data});}).catch(function(err){dispatch({type:\"IS_NOT_AUTHENTICATED\",payload:''});});};}export function doLogin(username,password){if(username&&password){return function(dispatch){var url='http://localhost:8082/api/authentication?username='+username+'&password='+base64.encode(utf8.encode(password));axios.post(url).then(function(response){localStorage.removeItem(\"token\");localStorage.setItem(\"token\",response.data.token);dispatch({type:\"LOGIN_SUCCESS\",payload:response.data});alert('ok');}).catch(function(err){dispatch({type:\"LOGIN_FAILED\",payload:err});alert('fhdjgkdl');});};}return{type:\"LOGIN_EMPTY\",payload:{message:\"Empty username or password.\"}};}export function doLogout(){localStorage.removeItem(\"token\");return{type:\"IS_NOT_AUTHENTICATED\",payload:''};}","map":{"version":3,"sources":["/home/pedrobraga/eclipse-workspace2020/nfview/backnfe/nfefront/src/actions/loginActions.js"],"names":["axios","base64","utf8","isAuthenticated","dispatch","url","config","headers","localStorage","getItem","get","then","response","type","payload","data","catch","err","doLogin","username","password","encode","post","removeItem","setItem","token","alert","message","doLogout"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,SAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CAGA,MAAO,SAASC,CAAAA,eAAT,EAA2B,CAChC,MAAO,UAASC,QAAT,CAAmB,CACvB,GAAIC,CAAAA,GAAG,CAAI,gCAAX,CACA,GAAIC,CAAAA,MAAM,CAAG,CACZC,OAAO,CAAE,CAAC,gBAAkB,UAAYC,YAAY,CAACC,OAAb,CAAsB,OAAtB,CAA/B,CADG,CAAb,CAIAT,KAAK,CAACU,GAAN,CAAUL,GAAV,CAAeC,MAAf,EACIK,IADJ,CACS,SAACC,QAAD,CAAc,CAClBR,QAAQ,CAAC,CAACS,IAAI,CAAE,kBAAP,CAA2BC,OAAO,CAAEF,QAAQ,CAACG,IAA7C,CAAD,CAAR,CACD,CAHJ,EAIIC,KAJJ,CAIU,SAACC,GAAD,CAAS,CACdb,QAAQ,CAAC,CAACS,IAAI,CAAE,sBAAP,CAA+BC,OAAO,CAAE,EAAxC,CAAD,CAAR,CACD,CANJ,EAOA,CAbH,CAcD,CAED,MAAO,SAASI,CAAAA,OAAT,CAAiBC,QAAjB,CAA2BC,QAA3B,CAAqC,CAC1C,GAAGD,QAAQ,EAAIC,QAAf,CAAyB,CACvB,MAAO,UAAShB,QAAT,CAAmB,CACzB,GAAIC,CAAAA,GAAG,CAAI,qDAAuDc,QAAvD,CAAmE,YAAnE,CAAkFlB,MAAM,CAACoB,MAAP,CAAcnB,IAAI,CAACmB,MAAL,CAAYD,QAAZ,CAAd,CAA7F,CACApB,KAAK,CAACsB,IAAN,CAAWjB,GAAX,EACIM,IADJ,CACS,SAACC,QAAD,CAAc,CAClBJ,YAAY,CAACe,UAAb,CAAyB,OAAzB,EACAf,YAAY,CAACgB,OAAb,CAAsB,OAAtB,CAA+BZ,QAAQ,CAACG,IAAT,CAAcU,KAA7C,EACArB,QAAQ,CAAC,CAACS,IAAI,CAAE,eAAP,CAAwBC,OAAO,CAAEF,QAAQ,CAACG,IAA1C,CAAD,CAAR,CACAW,KAAK,CAAC,IAAD,CAAL,CACD,CANJ,EAOIV,KAPJ,CAOU,SAACC,GAAD,CAAS,CACdb,QAAQ,CAAC,CAACS,IAAI,CAAE,cAAP,CAAuBC,OAAO,CAAEG,GAAhC,CAAD,CAAR,CACAS,KAAK,CAAC,UAAD,CAAL,CACD,CAVJ,EAWA,CAbD,CAcD,CACD,MAAO,CACLb,IAAI,CAAE,aADD,CAELC,OAAO,CAAE,CACPa,OAAO,CAAG,6BADH,CAFJ,CAAP,CAMD,CAGD,MAAO,SAASC,CAAAA,QAAT,EAAoB,CACzBpB,YAAY,CAACe,UAAb,CAAyB,OAAzB,EACA,MAAO,CACLV,IAAI,CAAE,sBADD,CAELC,OAAO,CAAE,EAFJ,CAAP,CAID","sourcesContent":["import axios from \"axios\";\nimport base64 from \"base-64\";\nimport utf8 from \"utf8\";\n\n\nexport function isAuthenticated() {   \n  return function(dispatch) {                \n     let url =  'http://localhost:8082/api/user'\n     var config = {\n      headers: {'Authorization':  'Bearer ' + localStorage.getItem( \"token\" )}\n    };\n\n     axios.get(url, config)\n        .then((response) => {\n          dispatch({type: \"IS_AUTHENTICATED\", payload: response.data})\n        })\n        .catch((err) => {\n          dispatch({type: \"IS_NOT_AUTHENTICATED\", payload: ''})\n        })\n    }  \n}\n\nexport function doLogin(username, password) {\n  if(username && password) {\n    return function(dispatch) {            \n     let url =  'http://localhost:8082/api/authentication?username=' + username +  '&password=' + base64.encode(utf8.encode(password))    \n     axios.post(url)\n        .then((response) => {    \n          localStorage.removeItem( \"token\" )       \n          localStorage.setItem( \"token\", response.data.token );                \n          dispatch({type: \"LOGIN_SUCCESS\", payload: response.data});\n          alert('ok');\n        })\n        .catch((err) => {\n          dispatch({type: \"LOGIN_FAILED\", payload: err})\n          alert('fhdjgkdl')\n        })\n    }\n  }\n  return {\n    type: \"LOGIN_EMPTY\",\n    payload: {\n      message : \"Empty username or password.\",\n    }\n  }\n}\n\n\nexport function doLogout() {   \n  localStorage.removeItem( \"token\" )   \n  return {\n    type: \"IS_NOT_AUTHENTICATED\",\n    payload: ''\n  }\n}"]},"metadata":{},"sourceType":"module"}