{"ast":null,"code":"import axios from \"axios\";\nimport base64 from \"base-64\";\nimport utf8 from \"utf8\";\nexport function isAuthenticated() {\n  return function (dispatch) {\n    let url = 'http://localhost:8082/api/user';\n    var config = {\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem(\"token\")\n      }\n    };\n    axios.get(url, config).then(response => {\n      dispatch({\n        type: \"IS_AUTHENTICATED\",\n        payload: response.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"IS_NOT_AUTHENTICATED\",\n        payload: ''\n      });\n    });\n  };\n}\nexport function doLogin(username, password) {\n  if (username && password) {\n    return function (dispatch) {\n      let url = 'http://localhost:8082/api/authentication?username=' + username + '&password=' + base64.encode(utf8.encode(password));\n      axios.post(url).then(response => {\n        localStorage.removeItem(\"token\");\n        localStorage.setItem(\"token\", response.data.token);\n        dispatch({\n          type: \"LOGIN_SUCCESS\",\n          payload: response.data\n        });\n        alert('ok');\n      }).catch(err => {\n        dispatch({\n          type: \"LOGIN_FAILED\",\n          payload: err\n        });\n        alert('fhdjgkdl');\n      });\n    };\n  }\n\n  return {\n    type: \"LOGIN_EMPTY\",\n    payload: {\n      message: \"Empty username or password.\"\n    }\n  };\n}\nexport function doLogout() {\n  localStorage.removeItem(\"token\");\n  return {\n    type: \"IS_NOT_AUTHENTICATED\",\n    payload: ''\n  };\n}","map":{"version":3,"sources":["/home/pedrobraga/Projetos/nfefront/src/actions/loginActions.js"],"names":["axios","base64","utf8","isAuthenticated","dispatch","url","config","headers","localStorage","getItem","get","then","response","type","payload","data","catch","err","doLogin","username","password","encode","post","removeItem","setItem","token","alert","message","doLogout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAGA,OAAO,SAASC,eAAT,GAA2B;AAChC,SAAO,UAASC,QAAT,EAAmB;AACvB,QAAIC,GAAG,GAAI,gCAAX;AACA,QAAIC,MAAM,GAAG;AACZC,MAAAA,OAAO,EAAE;AAAC,yBAAkB,YAAYC,YAAY,CAACC,OAAb,CAAsB,OAAtB;AAA/B;AADG,KAAb;AAIAT,IAAAA,KAAK,CAACU,GAAN,CAAUL,GAAV,EAAeC,MAAf,EACIK,IADJ,CACUC,QAAD,IAAc;AAClBR,MAAAA,QAAQ,CAAC;AAACS,QAAAA,IAAI,EAAE,kBAAP;AAA2BC,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA7C,OAAD,CAAR;AACD,KAHJ,EAIIC,KAJJ,CAIWC,GAAD,IAAS;AACdb,MAAAA,QAAQ,CAAC;AAACS,QAAAA,IAAI,EAAE,sBAAP;AAA+BC,QAAAA,OAAO,EAAE;AAAxC,OAAD,CAAR;AACD,KANJ;AAOA,GAbH;AAcD;AAED,OAAO,SAASI,OAAT,CAAiBC,QAAjB,EAA2BC,QAA3B,EAAqC;AAC1C,MAAGD,QAAQ,IAAIC,QAAf,EAAyB;AACvB,WAAO,UAAShB,QAAT,EAAmB;AACzB,UAAIC,GAAG,GAAI,uDAAuDc,QAAvD,GAAmE,YAAnE,GAAkFlB,MAAM,CAACoB,MAAP,CAAcnB,IAAI,CAACmB,MAAL,CAAYD,QAAZ,CAAd,CAA7F;AACApB,MAAAA,KAAK,CAACsB,IAAN,CAAWjB,GAAX,EACIM,IADJ,CACUC,QAAD,IAAc;AAClBJ,QAAAA,YAAY,CAACe,UAAb,CAAyB,OAAzB;AACAf,QAAAA,YAAY,CAACgB,OAAb,CAAsB,OAAtB,EAA+BZ,QAAQ,CAACG,IAAT,CAAcU,KAA7C;AACArB,QAAAA,QAAQ,CAAC;AAACS,UAAAA,IAAI,EAAE,eAAP;AAAwBC,UAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA1C,SAAD,CAAR;AACAW,QAAAA,KAAK,CAAC,IAAD,CAAL;AACD,OANJ,EAOIV,KAPJ,CAOWC,GAAD,IAAS;AACdb,QAAAA,QAAQ,CAAC;AAACS,UAAAA,IAAI,EAAE,cAAP;AAAuBC,UAAAA,OAAO,EAAEG;AAAhC,SAAD,CAAR;AACAS,QAAAA,KAAK,CAAC,UAAD,CAAL;AACD,OAVJ;AAWA,KAbD;AAcD;;AACD,SAAO;AACLb,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,OAAO,EAAE;AACPa,MAAAA,OAAO,EAAG;AADH;AAFJ,GAAP;AAMD;AAGD,OAAO,SAASC,QAAT,GAAoB;AACzBpB,EAAAA,YAAY,CAACe,UAAb,CAAyB,OAAzB;AACA,SAAO;AACLV,IAAAA,IAAI,EAAE,sBADD;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID","sourcesContent":["import axios from \"axios\";\nimport base64 from \"base-64\";\nimport utf8 from \"utf8\";\n\n\nexport function isAuthenticated() {   \n  return function(dispatch) {                \n     let url =  'http://localhost:8082/api/user'\n     var config = {\n      headers: {'Authorization':  'Bearer ' + localStorage.getItem( \"token\" )}\n    };\n\n     axios.get(url, config)\n        .then((response) => {\n          dispatch({type: \"IS_AUTHENTICATED\", payload: response.data})\n        })\n        .catch((err) => {\n          dispatch({type: \"IS_NOT_AUTHENTICATED\", payload: ''})\n        })\n    }  \n}\n\nexport function doLogin(username, password) {\n  if(username && password) {\n    return function(dispatch) {            \n     let url =  'http://localhost:8082/api/authentication?username=' + username +  '&password=' + base64.encode(utf8.encode(password))    \n     axios.post(url)\n        .then((response) => {    \n          localStorage.removeItem( \"token\" )       \n          localStorage.setItem( \"token\", response.data.token );                \n          dispatch({type: \"LOGIN_SUCCESS\", payload: response.data});\n          alert('ok');\n        })\n        .catch((err) => {\n          dispatch({type: \"LOGIN_FAILED\", payload: err})\n          alert('fhdjgkdl')\n        })\n    }\n  }\n  return {\n    type: \"LOGIN_EMPTY\",\n    payload: {\n      message : \"Empty username or password.\",\n    }\n  }\n}\n\n\nexport function doLogout() {   \n  localStorage.removeItem( \"token\" )   \n  return {\n    type: \"IS_NOT_AUTHENTICATED\",\n    payload: ''\n  }\n}"]},"metadata":{},"sourceType":"module"}